name: Run Build and Test Automation
on: [push]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout 🛎️
        uses: actions/checkout@v2 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Install, Build, Test 🔧 # This runs a series of commands as if building a live version of the project
        run: |
          go mod tidy
          go test github.com/julwrites/ScriptureBot/pkg/utils \
                  github.com/julwrites/ScriptureBot/pkg/app \
                  github.com/julwrites/ScriptureBot/pkg/bot

      - name: Docker Build
        env:
          TELEGRAM_ID: ${{secrets.TELEGRAM_ID}}
          ADMIN_ID: ${{secrets.TELEGRAM_ADMIN_ID}}
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          ARTIFACT_ID: ${{secrets.GCLOUD_ARTIFACT_REPOSITORY_ID}}
        run: |
          printf "TELEGRAM_ID=$TELEGRAM_ID\nADMIN_ID=$ADMIN_ID\nPROJECT_ID=$PROJECT_ID" >> secrets.yaml
          cat secrets.yaml
          docker build -f Dockerfile -t us-central1-docker.pkg.dev/$ARTIFACT_ID/$PROJECT_ID/root:latest .

      - name: GCloud Check
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        with:
          args: info

      - name: Artifact Push
        uses: RafikFarhad/push-to-gcr-github-action@v3.0.2
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          ARTIFACT_ID: ${{secrets.GCLOUD_ARTIFACT_REPOSITORY_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
        with:
          gcloud_service_key: $APPLICATION_CREDENTIALS
          project_id: $PROJECT_ID
          image_name: us-central1-docker.pkg.dev/$ARTIFACT_ID/$PROJECT_ID/root

      - name: Deployment
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
          ARTIFACT_ID: ${{secrets.GCLOUD_ARTIFACT_REPOSITORY_ID}}
        with:
          args: gcloud run deploy scripturebot --image us-central1-docker.pkg.dev/$ARTIFACT_ID/$PROJECT_ID/root:latest --region us-central1
